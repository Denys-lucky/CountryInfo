{"ast":null,"code":"import _objectSpread from\"D:/react-country/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"D:/react-country/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:/react-country/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'axios';import{useState,useEffect}from'react';import{useHistory}from'react-router-dom';import{List}from'../components/List';import{Card}from'../components/Card';import{Controls}from'../components/Controls';import{ALL_COUNTRIES}from'../config';import{NotFound}from'./NotFound';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var HomePage=function HomePage(_ref){var setCountries=_ref.setCountries,countries=_ref.countries;var _useState=useState(countries),_useState2=_slicedToArray(_useState,2),filteredCountries=_useState2[0],setFilteredCountries=_useState2[1];var _useHistory=useHistory(),push=_useHistory.push;var handleSearch=function handleSearch(search,region){var data=_toConsumableArray(countries);if(region){data=data.filter(function(c){return c.region.includes(region);});}if(search){data=data.filter(function(c){return c.name.toLowerCase().includes(search.toLowerCase());});}setFilteredCountries(data);};useEffect(function(){if(!countries.length)axios.get(ALL_COUNTRIES).then(function(_ref2){var data=_ref2.data;return setCountries(data);});// eslint-disable-next-line\n},[]);useEffect(function(){handleSearch();// eslint-disable-next-line\n},[countries]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Controls,{onSearch:handleSearch}),/*#__PURE__*/_jsx(List,{children:filteredCountries.map(function(c){var countryInfo={img:c.flags.png,name:c.name,info:[{title:'Population',description:c.population.toLocaleString()},{title:'Region',description:c.region},{title:'Capital',description:c.capital}]};return/*#__PURE__*/_jsx(Card,_objectSpread({onClick:function onClick(){return push(\"/country/\".concat(c.name));}},countryInfo),c.name);})})]});};","map":{"version":3,"sources":["D:/react-country/src/pages/HomePage.jsx"],"names":["axios","useState","useEffect","useHistory","List","Card","Controls","ALL_COUNTRIES","NotFound","HomePage","setCountries","countries","filteredCountries","setFilteredCountries","push","handleSearch","search","region","data","filter","c","includes","name","toLowerCase","length","get","then","map","countryInfo","img","flags","png","info","title","description","population","toLocaleString","capital"],"mappings":"4ZAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,OAASC,IAAT,KAAqB,oBAArB,CACA,OAASC,IAAT,KAAqB,oBAArB,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OAASC,aAAT,KAA8B,WAA9B,CACA,OAASC,QAAT,KAAyB,YAAzB,C,6IAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAiC,IAA9BC,CAAAA,YAA8B,MAA9BA,YAA8B,CAAhBC,SAAgB,MAAhBA,SAAgB,CACvD,cAAkDV,QAAQ,CAACU,SAAD,CAA1D,wCAAOC,iBAAP,eAA0BC,oBAA1B,eAEA,gBAAiBV,UAAU,EAA3B,CAAQW,IAAR,aAAQA,IAAR,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAASC,MAAT,CAAoB,CACvC,GAAIC,CAAAA,IAAI,oBAAOP,SAAP,CAAR,CAEA,GAAIM,MAAJ,CAAY,CACVC,IAAI,CAAGA,IAAI,CAACC,MAAL,CAAY,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACH,MAAF,CAASI,QAAT,CAAkBJ,MAAlB,CAAP,EAAZ,CAAP,CACD,CAED,GAAID,MAAJ,CAAY,CACVE,IAAI,CAAGA,IAAI,CAACC,MAAL,CAAY,SAACC,CAAD,QACjBA,CAAAA,CAAC,CAACE,IAAF,CAAOC,WAAP,GAAqBF,QAArB,CAA8BL,MAAM,CAACO,WAAP,EAA9B,CADiB,EAAZ,CAAP,CAGD,CAEDV,oBAAoB,CAACK,IAAD,CAApB,CACD,CAdD,CAgBAhB,SAAS,CAAC,UAAM,CACd,GAAI,CAACS,SAAS,CAACa,MAAf,CACExB,KAAK,CAACyB,GAAN,CAAUlB,aAAV,EAAyBmB,IAAzB,CAA8B,mBAAGR,CAAAA,IAAH,OAAGA,IAAH,OAAcR,CAAAA,YAAY,CAACQ,IAAD,CAA1B,EAA9B,EACF;AACD,CAJQ,CAIN,EAJM,CAAT,CAMAhB,SAAS,CAAC,UAAM,CACda,YAAY,GACZ;AACD,CAHQ,CAGN,CAACJ,SAAD,CAHM,CAAT,CAKA,mBACE,wCACE,KAAC,QAAD,EAAU,QAAQ,CAAEI,YAApB,EADF,cAEE,KAAC,IAAD,WACGH,iBAAiB,CAACe,GAAlB,CAAsB,SAACP,CAAD,CAAO,CAC5B,GAAMQ,CAAAA,WAAW,CAAG,CAClBC,GAAG,CAAET,CAAC,CAACU,KAAF,CAAQC,GADK,CAElBT,IAAI,CAAEF,CAAC,CAACE,IAFU,CAGlBU,IAAI,CAAE,CACJ,CACEC,KAAK,CAAE,YADT,CAEEC,WAAW,CAAEd,CAAC,CAACe,UAAF,CAAaC,cAAb,EAFf,CADI,CAKJ,CACEH,KAAK,CAAE,QADT,CAEEC,WAAW,CAAEd,CAAC,CAACH,MAFjB,CALI,CASJ,CACEgB,KAAK,CAAE,SADT,CAEEC,WAAW,CAAEd,CAAC,CAACiB,OAFjB,CATI,CAHY,CAApB,CAmBA,mBACE,KAAC,IAAD,gBAEE,OAAO,CAAE,yBAAMvB,CAAAA,IAAI,oBAAaM,CAAC,CAACE,IAAf,EAAV,EAFX,EAGMM,WAHN,EACOR,CAAC,CAACE,IADT,CADF,CAOD,CA3BA,CADH,EAFF,GADF,CAmCD,CAnEM","sourcesContent":["import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { List } from '../components/List';\nimport { Card } from '../components/Card';\nimport { Controls } from '../components/Controls';\nimport { ALL_COUNTRIES } from '../config';\nimport { NotFound } from './NotFound';\n\nexport const HomePage = ({ setCountries, countries }) => {\n  const [filteredCountries, setFilteredCountries] = useState(countries);\n\n  const { push } = useHistory();\n\n  const handleSearch = (search, region) => {\n    let data = [...countries];\n\n    if (region) {\n      data = data.filter((c) => c.region.includes(region));\n    }\n\n    if (search) {\n      data = data.filter((c) =>\n        c.name.toLowerCase().includes(search.toLowerCase())\n      );\n    }\n\n    setFilteredCountries(data);\n  };\n\n  useEffect(() => {\n    if (!countries.length)\n      axios.get(ALL_COUNTRIES).then(({ data }) => setCountries(data));\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    handleSearch();\n    // eslint-disable-next-line\n  }, [countries]);\n\n  return (\n    <>\n      <Controls onSearch={handleSearch} />\n      <List>\n        {filteredCountries.map((c) => {\n          const countryInfo = {\n            img: c.flags.png,\n            name: c.name,\n            info: [\n              {\n                title: 'Population',\n                description: c.population.toLocaleString(),\n              },\n              {\n                title: 'Region',\n                description: c.region,\n              },\n              {\n                title: 'Capital',\n                description: c.capital,\n              },\n            ],\n          };\n\n          return (\n            <Card\n              key={c.name}\n              onClick={() => push(`/country/${c.name}`)}\n              {...countryInfo}\n            />\n          );\n        })}\n      </List>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
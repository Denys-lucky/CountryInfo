{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-country\\\\src\\\\components\\\\Info.jsx\",\n    _s = $RefreshSig$();\n\n// import styled from 'styled-components';\n// import axios from 'axios';\n// import { useState, useEffect } from 'react';\n// import { filterByCode } from '../config';\n// const Wrapper = styled.section``;\n// const InfoImage = styled.img``;\n// const InfoTitle = styled.h1``;\n// const ListGroup = styled.div``;\n// export const Info = (props) => {\n//     const {\n//         name,\n//         nativeName,\n//         flag,\n//         capital, \n//         population,\n//         region,\n//         subregion,\n//         topLeveDomain,\n//         currencies = [],\n//         language = [],\n//         borders = [],\n//         push,\n//     } = props;\n//     return (\n//         <Wrapper>\n//           <InfoImage src={flag} alt={name} />\n//           <div>\n//             <InfoTitle>{name}</InfoTitle>\n//             <ListGroup>\n//                 <List>\n//                   <ListItem>\n//                       <b>Native Name:</b> {nativeName}\n//                   </ListItem>\n//                   <ListItem>\n//                       <b>Population:</b> {population}\n//                   </ListItem>\n//                   <ListItem>\n//                       <b>Region:</b> {region}\n//                   </ListItem>\n//                   <ListItem>\n//                       <b>Sub Region:</b> {subregion}\n//                   </ListItem>\n//                   <ListItem>\n//                       <b>Capital:</b> {capital}\n//                   </ListItem>\n//                 </List>\n//                 <List>\n//                 <ListItem>\n//                   <b>Top Level Domain</b> {' '}\n//                     {topLevelDomain.map((d) => \n//                     (<span key={d}>{d}</span>\n//                   ))}\n//                 </ListItem>\n//                 <ListItem>\n//                   <b>Currency</b> {' '}\n//                     {currencies.map((c) => \n//                     (<span key={c.code}>{c.name}</span>\n//                   ))}\n//                 </ListItem>\n//                 <ListItem>\n//                   <b>Language</b> {' '}\n//                     {languages.map((l) => \n//                     (<span key={l.name}>{l.name}</span>\n//                   ))}\n//                 </ListItem>\n//                 </List>\n//             </ListGroup>\n//           </div>\n//         </Wrapper>\n//     )\n// }\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { filterByCode } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.section`\n  margin-top: 3rem;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 100%;\n  gap: 2rem;\n  @media (min-width: 767px) {\n    grid-template-columns: minmax(100px, 400px) 1fr;\n    align-items: center;\n    gap: 5rem;\n  }\n  @media (min-width: 1024px) {\n    grid-template-columns: minmax(400px, 600px) 1fr;\n  }\n`;\n_c = Wrapper;\nconst InfoImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n`;\n_c2 = InfoImage;\nconst InfoTitle = styled.h1`\n  margin: 0;\n  font-weight: var(--fw-normal);\n`;\n_c3 = InfoTitle;\nconst ListGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  @media (min-width: 1024px) {\n    flex-direction: row;\n    gap: 4rem;\n  }\n`;\n_c4 = ListGroup;\nconst List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n_c5 = List;\nconst ListItem = styled.li`\n  line-height: 1.8;\n  & > b {\n    font-weight: var(--fw-bold);\n  }\n`;\n_c6 = ListItem;\nconst Meta = styled.div`\n  margin-top: 3rem;\n  display: flex;\n  gap: 1.5rem;\n  flex-direction: column;\n  align-items: flex-start;\n  & > b {\n    font-weight: var(--fw-bold);\n  }\n  @media (min-width: 767px) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n_c7 = Meta;\nconst TagGroup = styled.div`\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n`;\n_c8 = TagGroup;\nconst Tag = styled.span`\n  padding: 0 1rem;\n  background-color: var(--colors-ui-base);\n  box-shadow: var(--shadow);\n  line-height: 1.5;\n  cursor: pointer;\n`;\n_c9 = Tag;\nexport const Info = props => {\n  _s();\n\n  const {\n    name,\n    nativeName,\n    flag,\n    capital,\n    population,\n    region,\n    subregion,\n    topLevelDomain,\n    currencies = [],\n    languages = [],\n    borders = [],\n    push\n  } = props;\n  const [neighbors, setNeighbors] = useState([]);\n  useEffect(() => {\n    if (borders.length) axios.get(filterByCode(borders)).then(({\n      data\n    }) => setNeighbors(data.map(c => c.name)));\n  }, [borders]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(InfoImage, {\n      src: flag,\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Native Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), \" \", nativeName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Population\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), \" \", population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Region:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), \" \", region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Sub Region:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), \" \", subregion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Capital:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), \" \", capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Top Level Domain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), ' ', topLevelDomain.map(d => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), ' ', currencies.map(c => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [c.name, \" \"]\n            }, c.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Top Level Domain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), ' ', languages.map(l => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: l.name\n            }, l.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Meta, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Border Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), !borders.length ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"There is no border countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TagGroup, {\n          children: neighbors.map(b => /*#__PURE__*/_jsxDEV(Tag, {\n            onClick: () => push(`/country/${b}`),\n            children: b\n          }, b, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Info, \"I1Fi3ROwaKHpIh3F8SsFtRmBFNc=\");\n\n_c10 = Info;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"InfoImage\");\n$RefreshReg$(_c3, \"InfoTitle\");\n$RefreshReg$(_c4, \"ListGroup\");\n$RefreshReg$(_c5, \"List\");\n$RefreshReg$(_c6, \"ListItem\");\n$RefreshReg$(_c7, \"Meta\");\n$RefreshReg$(_c8, \"TagGroup\");\n$RefreshReg$(_c9, \"Tag\");\n$RefreshReg$(_c10, \"Info\");","map":{"version":3,"sources":["D:/react-country/src/components/Info.jsx"],"names":["styled","axios","useState","useEffect","filterByCode","Wrapper","section","InfoImage","img","InfoTitle","h1","ListGroup","div","List","ul","ListItem","li","Meta","TagGroup","Tag","span","Info","props","name","nativeName","flag","capital","population","region","subregion","topLevelDomain","currencies","languages","borders","push","neighbors","setNeighbors","length","get","then","data","map","c","d","code","l","b"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,WAA7B;;AAEA,MAAMC,OAAO,GAAGL,MAAM,CAACM,OAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;KAAMD,O;AAgBN,MAAME,SAAS,GAAGP,MAAM,CAACQ,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMD,S;AAON,MAAME,SAAS,GAAGT,MAAM,CAACU,EAAG;AAC5B;AACA;AACA,CAHA;MAAMD,S;AAKN,MAAME,SAAS,GAAGX,MAAM,CAACY,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,S;AAUN,MAAME,IAAI,GAAGb,MAAM,CAACc,EAAG;AACvB;AACA;AACA;AACA,CAJA;MAAMD,I;AAMN,MAAME,QAAQ,GAAGf,MAAM,CAACgB,EAAG;AAC3B;AACA;AACA;AACA;AACA,CALA;MAAMD,Q;AAON,MAAME,IAAI,GAAGjB,MAAM,CAACY,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMK,I;AAeN,MAAMC,QAAQ,GAAGlB,MAAM,CAACY,GAAI;AAC5B;AACA;AACA;AACA,CAJA;MAAMM,Q;AAMN,MAAMC,GAAG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","sourcesContent":["// import styled from 'styled-components';\r\n// import axios from 'axios';\r\n// import { useState, useEffect } from 'react';\r\n// import { filterByCode } from '../config';\r\n\r\n// const Wrapper = styled.section``;\r\n\r\n// const InfoImage = styled.img``;\r\n\r\n// const InfoTitle = styled.h1``;\r\n\r\n// const ListGroup = styled.div``;\r\n\r\n// export const Info = (props) => {\r\n\r\n//     const {\r\n//         name,\r\n//         nativeName,\r\n//         flag,\r\n//         capital, \r\n//         population,\r\n//         region,\r\n//         subregion,\r\n//         topLeveDomain,\r\n//         currencies = [],\r\n//         language = [],\r\n//         borders = [],\r\n//         push,\r\n//     } = props;\r\n\r\n//     return (\r\n//         <Wrapper>\r\n//           <InfoImage src={flag} alt={name} />\r\n\r\n//           <div>\r\n//             <InfoTitle>{name}</InfoTitle>\r\n//             <ListGroup>\r\n//                 <List>\r\n\r\n//                   <ListItem>\r\n//                       <b>Native Name:</b> {nativeName}\r\n//                   </ListItem>\r\n\r\n//                   <ListItem>\r\n//                       <b>Population:</b> {population}\r\n//                   </ListItem>\r\n\r\n//                   <ListItem>\r\n//                       <b>Region:</b> {region}\r\n//                   </ListItem>\r\n\r\n//                   <ListItem>\r\n//                       <b>Sub Region:</b> {subregion}\r\n//                   </ListItem>\r\n\r\n//                   <ListItem>\r\n//                       <b>Capital:</b> {capital}\r\n//                   </ListItem>\r\n\r\n//                 </List>\r\n\r\n//                 <List>\r\n\r\n//                 <ListItem>\r\n//                   <b>Top Level Domain</b> {' '}\r\n//                     {topLevelDomain.map((d) => \r\n//                     (<span key={d}>{d}</span>\r\n//                   ))}\r\n//                 </ListItem>\r\n\r\n//                 <ListItem>\r\n//                   <b>Currency</b> {' '}\r\n//                     {currencies.map((c) => \r\n//                     (<span key={c.code}>{c.name}</span>\r\n//                   ))}\r\n//                 </ListItem>\r\n\r\n//                 <ListItem>\r\n//                   <b>Language</b> {' '}\r\n//                     {languages.map((l) => \r\n//                     (<span key={l.name}>{l.name}</span>\r\n//                   ))}\r\n//                 </ListItem>\r\n\r\n//                 </List>\r\n//             </ListGroup>\r\n//           </div>\r\n//         </Wrapper>\r\n//     )\r\n// }\r\n\r\n\r\n\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { filterByCode } from '../config';\r\n\r\nconst Wrapper = styled.section`\r\n  margin-top: 3rem;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  gap: 2rem;\r\n  @media (min-width: 767px) {\r\n    grid-template-columns: minmax(100px, 400px) 1fr;\r\n    align-items: center;\r\n    gap: 5rem;\r\n  }\r\n  @media (min-width: 1024px) {\r\n    grid-template-columns: minmax(400px, 600px) 1fr;\r\n  }\r\n`;\r\n\r\nconst InfoImage = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst InfoTitle = styled.h1`\r\n  margin: 0;\r\n  font-weight: var(--fw-normal);\r\n`;\r\n\r\nconst ListGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n  @media (min-width: 1024px) {\r\n    flex-direction: row;\r\n    gap: 4rem;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  line-height: 1.8;\r\n  & > b {\r\n    font-weight: var(--fw-bold);\r\n  }\r\n`;\r\n\r\nconst Meta = styled.div`\r\n  margin-top: 3rem;\r\n  display: flex;\r\n  gap: 1.5rem;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  & > b {\r\n    font-weight: var(--fw-bold);\r\n  }\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst TagGroup = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  padding: 0 1rem;\r\n  background-color: var(--colors-ui-base);\r\n  box-shadow: var(--shadow);\r\n  line-height: 1.5;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Info = (props) => {\r\n  const {\r\n    name,\r\n    nativeName,\r\n    flag,\r\n    capital,\r\n    population,\r\n    region,\r\n    subregion,\r\n    topLevelDomain,\r\n    currencies = [],\r\n    languages = [],\r\n    borders = [],\r\n    push,\r\n  } = props;\r\n\r\n  const [neighbors, setNeighbors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (borders.length)\r\n      axios\r\n        .get(filterByCode(borders))\r\n        .then(({ data }) => setNeighbors(data.map((c) => c.name)));\r\n  }, [borders]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <InfoImage src={flag} alt={name} />\r\n\r\n      <div>\r\n        <InfoTitle>{name}</InfoTitle>\r\n        <ListGroup>\r\n          <List>\r\n            <ListItem>\r\n              <b>Native Name:</b> {nativeName}\r\n            </ListItem>\r\n            <ListItem>\r\n              <b>Population</b> {population}\r\n            </ListItem>\r\n            <ListItem>\r\n              <b>Region:</b> {region}\r\n            </ListItem>\r\n            <ListItem>\r\n              <b>Sub Region:</b> {subregion}\r\n            </ListItem>\r\n            <ListItem>\r\n              <b>Capital:</b> {capital}\r\n            </ListItem>\r\n          </List>\r\n          <List>\r\n            <ListItem>\r\n              <b>Top Level Domain</b>{' '}\r\n              {topLevelDomain.map((d) => (\r\n                <span key={d}>{d}</span>\r\n              ))}\r\n            </ListItem>\r\n            <ListItem>\r\n              <b>Currency</b>{' '}\r\n              {currencies.map((c) => (\r\n                <span key={c.code}>{c.name} </span>\r\n              ))}\r\n            </ListItem>\r\n            <ListItem>\r\n              <b>Top Level Domain</b>{' '}\r\n              {languages.map((l) => (\r\n                <span key={l.name}>{l.name}</span>\r\n              ))}\r\n            </ListItem>\r\n          </List>\r\n        </ListGroup>\r\n        <Meta>\r\n          <b>Border Countries</b>\r\n          {!borders.length ? (\r\n            <span>There is no border countries</span>\r\n          ) : (\r\n            <TagGroup>\r\n              {neighbors.map((b) => (\r\n                <Tag key={b} onClick={() => push(`/country/${b}`)}>\r\n                  {b}\r\n                </Tag>\r\n              ))}\r\n            </TagGroup>\r\n          )}\r\n        </Meta>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}
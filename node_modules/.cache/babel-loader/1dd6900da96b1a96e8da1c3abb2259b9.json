{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-country\\\\src\\\\pages\\\\HomePage.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { List } from '../components/List';\nimport { Card } from '../components/Card';\nimport { Controls } from '../components/Controls';\nimport { ALL_COUNTRIES } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HomePage = ({\n  setCountries,\n  countries\n}) => {\n  _s();\n\n  const [filteredCountries, setFilteredCountries] = useState([countries]);\n  const {\n    push\n  } = useHistory();\n\n  const handleSearch = (search, region) => {\n    let data = [...countries];\n\n    if (region) {\n      data = data.filter(c => region.includes(region));\n    }\n\n    if (search) {\n      data = data.filter(c => c.name.toLowerCase().includes(search.toLowerCase()));\n    }\n\n    setFilteredCountries(data);\n  };\n\n  useEffect(() => {\n    if (!countries.length) axios.get(ALL_COUNTRIES).then(({\n      data\n    }) => setCountries(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Controls, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: filteredCountries.map(c => {\n        const countryInfo = {\n          img: c.flags.png,\n          name: c.name,\n          info: [{\n            title: 'Population',\n            description: c.population.toLocaleString()\n          }, {\n            title: 'Region',\n            description: c.region\n          }, {\n            title: 'Capital',\n            description: c.capital\n          }]\n        };\n        return /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => push(`/country/${c.name}`),\n          ...countryInfo\n        }, c.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomePage, \"fc9VDdkLe+8y7UQsPDL/suDrBVg=\", false, function () {\n  return [useHistory];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/react-country/src/pages/HomePage.jsx"],"names":["axios","useState","useEffect","useHistory","List","Card","Controls","ALL_COUNTRIES","HomePage","setCountries","countries","filteredCountries","setFilteredCountries","push","handleSearch","search","region","data","filter","c","includes","name","toLowerCase","length","get","then","map","countryInfo","img","flags","png","info","title","description","population","toLocaleString","capital"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,aAAT,QAA8B,WAA9B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAA+B;AAAA;;AACnD,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,CAACS,SAAD,CAAD,CAA1D;AAEA,QAAM;AAACG,IAAAA;AAAD,MAASV,UAAU,EAAzB;;AAEA,QAAMW,YAAY,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AACvC,QAAIC,IAAI,GAAG,CAAC,GAAGP,SAAJ,CAAX;;AAEA,QAAGM,MAAH,EAAW;AACTC,MAAAA,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAYC,CAAC,IAAIH,MAAM,CAACI,QAAP,CAAgBJ,MAAhB,CAAjB,CAAP;AACD;;AACD,QAAGD,MAAH,EAAW;AACTE,MAAAA,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACE,IAAF,CAAOC,WAAP,GAAqBF,QAArB,CAA8BL,MAAM,CAACO,WAAP,EAA9B,CAAjB,CAAP;AACD;;AAEDV,IAAAA,oBAAoB,CAACK,IAAD,CAApB;AACD,GAXD;;AAaAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACQ,SAAS,CAACa,MAAd,EACAvB,KAAK,CAACwB,GAAN,CAAUjB,aAAV,EAAyBkB,IAAzB,CAA8B,CAAC;AAACR,MAAAA;AAAD,KAAD,KAAYR,YAAY,CAACQ,IAAD,CAAtD;AACD,GAHQ,EAGN,EAHM,CAAT;AAKF,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,gBACCH,iBAAiB,CAACe,GAAlB,CAAuBP,CAAD,IAAO;AAC5B,cAAMQ,WAAW,GAAG;AACpBC,UAAAA,GAAG,EAAET,CAAC,CAACU,KAAF,CAAQC,GADO;AAEpBT,UAAAA,IAAI,EAAEF,CAAC,CAACE,IAFY;AAGpBU,UAAAA,IAAI,EAAE,CACA;AACEC,YAAAA,KAAK,EAAE,YADT;AAEEC,YAAAA,WAAW,EAAEd,CAAC,CAACe,UAAF,CAAaC,cAAb;AAFf,WADA,EAKA;AACEH,YAAAA,KAAK,EAAE,QADT;AAEEC,YAAAA,WAAW,EAAEd,CAAC,CAACH;AAFjB,WALA,EASA;AACEgB,YAAAA,KAAK,EAAE,SADT;AAEEC,YAAAA,WAAW,EAAEd,CAAC,CAACiB;AAFjB,WATA;AAHc,SAApB;AAmBE,4BACE,QAAC,IAAD;AAEE,UAAA,OAAO,EAAE,MAAMvB,IAAI,CAAE,YAAWM,CAAC,CAACE,IAAK,EAApB,CAFrB;AAAA,aAGMM;AAHN,WACOR,CAAC,CAACE,IADT;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OA3BF;AADD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAmCD,CA1DM;;GAAMb,Q;UAGML,U;;;KAHNK,Q","sourcesContent":["import axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { List } from '../components/List';\r\nimport { Card } from '../components/Card';\r\nimport { Controls } from '../components/Controls';\r\nimport { ALL_COUNTRIES } from '../config';\r\n\r\nexport const HomePage = ({setCountries, countries}) => {\r\n    const [filteredCountries, setFilteredCountries] = useState([countries]);\r\n\r\n    const {push} = useHistory();\r\n\r\n    const handleSearch = (search, region) => {\r\n      let data = [...countries];\r\n\r\n      if(region) {\r\n        data = data.filter(c => region.includes(region))\r\n      }\r\n      if(search) {\r\n        data = data.filter(c => c.name.toLowerCase().includes(search.toLowerCase()))\r\n      }\r\n\r\n      setFilteredCountries(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(!countries.length)\r\n      axios.get(ALL_COUNTRIES).then(({data}) => setCountries(data));\r\n    }, [])\r\n\r\n  return (\r\n    <>\r\n      <Controls onSearch={handleSearch} />\r\n      <List>\r\n      {filteredCountries.map((c) => {\r\n        const countryInfo = {\r\n        img: c.flags.png,\r\n        name: c.name,\r\n        info: [\r\n              {\r\n                title: 'Population',\r\n                description: c.population.toLocaleString(),\r\n              },\r\n              {\r\n                title: 'Region',\r\n                description: c.region,\r\n              },\r\n              {\r\n                title: 'Capital',\r\n                description: c.capital,\r\n              },\r\n            ],\r\n          };\r\n\r\n          return (\r\n            <Card\r\n              key={c.name}\r\n              onClick={() => push(`/country/${c.name}`)}\r\n              {...countryInfo}\r\n            />\r\n          );\r\n        })}\r\n      </List>\r\n    </>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}